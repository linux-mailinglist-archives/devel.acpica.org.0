Return-Path: <devel-bounces@acpica.org>
X-Original-To: lists+devel-acpica@lfdr.de
Delivered-To: lists+devel-acpica@lfdr.de
Received: from ml01.01.org (ml01.01.org [198.145.21.10])
	by mail.lfdr.de (Postfix) with ESMTPS id 0B15041FA6E
	for <lists+devel-acpica@lfdr.de>; Sat,  2 Oct 2021 10:51:59 +0200 (CEST)
Received: from ml01.vlan13.01.org (localhost [IPv6:::1])
	by ml01.01.org (Postfix) with ESMTP id 81265100EA2CF;
	Sat,  2 Oct 2021 01:51:56 -0700 (PDT)
Received-SPF: Pass (mailfrom) identity=mailfrom; client-ip=85.118.132.146; helo=mail.medvecky.net; envelope-from=r.marek@assembler.cz; receiver=<UNKNOWN> 
Received: from mail.medvecky.net (mail.medvecky.net [85.118.132.146])
	by ml01.01.org (Postfix) with ESMTP id 9FB5F100EF27E
	for <devel@acpica.org>; Sat,  2 Oct 2021 01:51:54 -0700 (PDT)
Received: from localhost (localhost [127.0.0.1])
	by mail.medvecky.net (Postfix) with ESMTP id 747F330AA83;
	Sat,  2 Oct 2021 10:51:50 +0200 (CEST)
X-Virus-Scanned: Debian amavisd-new at medvecky.net
X-Spam-Flag: NO
X-Spam-Score: -2.822
X-Spam-Level: 
X-Spam-Status: No, score=-2.822 tagged_above=-999 required=3.8
	tests=[ALL_TRUSTED=-1, BAYES_00=-1.9, TW_XF=0.077,
	URIBL_BLOCKED=0.001] autolearn=ham autolearn_force=no
Received: from mail.medvecky.net ([127.0.0.1])
	by localhost (slovakia.medvecky.net [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id iPEoRJe4IlbM; Sat,  2 Oct 2021 10:51:45 +0200 (CEST)
Received: from [192.168.0.115] (ip-86-49-244-235.net.upcbroadband.cz [86.49.244.235])
	by mail.medvecky.net (Postfix) with ESMTPSA id E295E30AA7F;
	Sat,  2 Oct 2021 10:51:44 +0200 (CEST)
To: Devin Steffler <devinsteffler@gmail.com>
References: <CAAuRk_jLAfxp7ryhuWPORetZaqMPoNmsHYP6Y=BtkCucAyp45w@mail.gmail.com>
 <CAAuRk_iKBx7Zmo60BDqFzmzqjz3q1vHPtNxje-KUcpixO_n+pg@mail.gmail.com>
 <d81ebcde-8de7-7b09-911a-ede29e78b80b@assembler.cz>
 <CAAuRk_g-rQQONwOCVvtzeO8Eq1XhcRDtyZzOnBsdAYGOdkbDpw@mail.gmail.com>
From: Rudolf Marek <r.marek@assembler.cz>
Message-ID: <c5fe2f8c-2b8c-2878-1e5d-bb9ffafb33ae@assembler.cz>
Date: Sat, 2 Oct 2021 10:51:44 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101
 Thunderbird/78.13.0
MIME-Version: 1.0
In-Reply-To: <CAAuRk_g-rQQONwOCVvtzeO8Eq1XhcRDtyZzOnBsdAYGOdkbDpw@mail.gmail.com>
Content-Language: en-US
Message-ID-Hash: LH2TY2N2BVP6MCCBX3BUTWD6WJ4P37YI
X-Message-ID-Hash: LH2TY2N2BVP6MCCBX3BUTWD6WJ4P37YI
X-MailFrom: r.marek@assembler.cz
X-Mailman-Rule-Misses: dmarc-mitigation; no-senders; approved; emergency; loop; banned-address; member-moderation; nonmember-moderation; administrivia; implicit-dest; max-recipients; max-size; news-moderation; no-subject; suspicious-header
CC: devel@acpica.org
X-Mailman-Version: 3.1.1
Precedence: list
Subject: [Devel] Re: Question about ACPICA, QNX and making beeps
List-Id: ACPICA Developer Mailing List <devel.acpica.org>
Archived-At: <https://lists.acpica.org/hyperkitty/list/devel@acpica.org/message/LH2TY2N2BVP6MCCBX3BUTWD6WJ4P37YI/>
List-Archive: <https://lists.acpica.org/hyperkitty/list/devel@acpica.org/>
List-Help: <mailto:devel-request@acpica.org?subject=help>
List-Post: <mailto:devel@acpica.org>
List-Subscribe: <mailto:devel-join@acpica.org>
List-Unsubscribe: <mailto:devel-leave@acpica.org>
Content-Type: text/plain; charset="utf-8"; format="flowed"
Content-Transfer-Encoding: base64

SGkgRGV2aW4sDQoNCk9uIDAxLiAxMC4gMjEgMjE6MDgsIERldmluIFN0ZWZmbGVyIHdyb3RlOg0K
PiBIaSBSdWRvbGYsDQo+IA0KPiBZb3UncmUgY29ycmVjdC4gU2ltcGx5IHdyaXRpbmcgMHhhMCB0
byAweGIyIHdpbGwgY2F1c2UgdGhpcy4NCg0KR3JlYXQuIChvciBub3Qgc28pLg0KDQo+IEknbSBo
YXZpbmcgYSBoYXJkIHRpbWUgZmlndXJpbmcgb3V0IHdoYXQgMHhiMiBpcy4gSXQgc2VlbXMgbGlr
ZSBhbiBJL08gcG9ydCB0aGF0IGNhdXNlcyBhbiBTTUkgYW5kIHNldHMgQVBNQ19FTj0xLiBUaGF0
J3MgYWxsIHRoYXQgSSBjb3VsZCBmaW5kIHNvIGZhci4gSSBoYXZlIG5vIGlkZWEgeWV0IHdoYXQg
dGhlIGJpdHMgaW4gMHhhMCBkby4NCg0KVGhpcyBpcyBhIHNvZnR3YXJlIEFQSSB0byBwZXJmb3Jt
IHZhcmlvdXMgZnVuY3Rpb25zIG5vdCBieSBBQ1BJQ0EgYnl0ZWNvZGUgYnV0IGJ5IHRoZSBtYWNo
aW5lIGNvZGUuIEl0IGlzIGtpbmQgb2YgImJhY2tkb29yIiBmb3IgQklPUyBwcm9ncmFtbWVycyBv
ZnRlbg0KbWlzdXNlZC4gSXQgd2FzIGhlYXZpbHkgdXNlZCBkdXJpbmcgQVBNIGVyYSwgYnV0IHJl
bWFpbmVkIHRoZXJlLiBUaGUgd2hvbGUgc3lzdGVtIG1hbmFnZW1lbWVudCBtb2RlIGlzIGFub3Ro
ZXIgbWVzcy4gVGhlIFNNSSBpcyBtb3JlIHByaXZpbGVnZWQgdGhhbiBvcywNCnNvIGl0IGlzIHJp
bmcgLTEgKE9TIGlzIHJpbmcgMCkuIEJhc2ljYWxseSB0aGlzIGFsbG93cyBCSU9TIHRvIGRvICJi
ZWhpbmQgdGhlIHNjZW5lIiBvcGVyYXRpb24uIDB4QTAgaXMganVzdCBBUEksIGl0IGlzIGludm9r
ZSBjb21tYW5kICJBMCIgaW4gQklPUy4NCkFuZCBieSBhIGNvbnZlbnRpb24gdGhpcyBjb21tYW5k
IGlzIHRvIGluc3RydWN0IEJJT1MgdGhhdCBBQ1BJQ0EgYXdhcmUgT1MgaXMgYmVpbmcgdXNlZC4g
VG8gZmlndXJlIG91dCB3aGF0IGlzIHJlYWxseSBkb25lLCB5b3Ugd291bGQgbmVlZCB0bw0KDQox
KSBnZXQgc3VwcG9ydCBmb3IgTXIuIExlbm92byAtIGJ1dCBub3QgdGhlIG9yZGluYXJ5IHN1cHBv
cnQNCjIpIHVucGFjayBhbmQgZGlzYXNzZW1ibGUvcmV2ZXJzZSBlbmdpbmVlciB0aGUgQklPUyB0
byBzZWUgd2hhdCAweEEwIGlzIHJlYWxseSBkb2luZw0KDQo+IElzIHRoaXMgdGVsbGluZyB0aGUg
QklPUyB0aGF0IEkgaGF2ZSBhbiBBUE0gYXdhcmUgT1MgKG5vdCBBQ1BJKT8gSWYgdGhhdCdzIHRo
ZSBjYXNlLCB0aGVuIEkgaGF2ZSBhIGZlZWxpbmcgdGhhdCBteSBBQ1BJQ0Egc2hvdWxkIGJlIGlu
c3RlYWQgZG9pbmcgc29tZXRoaW5nIHRvIHNheSAiSSdtIG5vdCBBUE0gYXdhcmUiIHNvIHRoYXQg
aXQgZG9lc24ndCB0cnkgdG8gZG8gdGhpcy4gT3IgaXMgYmVpbmcgIkFQTSBhd2FyZSIgcmVxdWly
ZWQgZm9yIEFDUEkgZnVuY3Rpb25hbGl0eSBzaW5jZSBpdCdzIHRoZSBzdWNjZXNzb3IgdG8gQVBN
PyBPbiB0aGlzIHN5c3RlbSByZWFkaW5nIGJhdHRlcnkgaW5mb3JtYXRpb24gd29ya3MgZmluZSB3
aXRob3V0IHRoaXMgd3JpdGUgdG8gMHhiMi4gSSB3b3VsZCBoYXZlIHRvIHRlc3Qgb24gb3RoZXIg
ZGV2aWNlcyBhcyB3ZWxsIHRvIGNoZWNrIGlmIHRoYXQncyBhbHdheXMgdGhlIGNhc2Ugb3Igbm90
Lg0KDQpUaGUgQTAgY29tbWFuZCB0ZWxzIHRoZSBjb250cmFyeSBpdCBzYXlzIHRvIE9TLCBJJ20g
QUNQSSBhd2FyZSBPUy4gQW5kIHNvbWVvbmUgYXQgTXIuIExlbm92byBwcm9iYWJseSB3YXMgY2xl
dmVyIHRvIHJlYWxpemUgdGhhdCB0aGV5IGNhbiBtYXliZSBzd2l0Y2ggb2ZmIHNvbWV0aGluZw0K
YmVjYXVzZSBsZWdhY3kgT1MgaXMgbm90IGluIHVzZS4uLg0KDQo+IEFzIGEgc2lkZSBub3RlLCBp
biBjYXNlIGl0J3MgcmVsZXZhbnQsIEkgYW0gc2V0dGluZyB0aGUgZm9sbG93aW5nIGluIG15IEFD
UElDQToNCj4gI2RlZmluZSBBQ1BJX09TX05BTUUgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAg
wqAiTWljcm9zb2Z0IFdpbmRvd3MgTlQiDQo+IA0KPiBUaGF0IHdhcyBkb25lIGFyYml0cmFyaWx5
IG9yIHBlcmhhcHMgb3V0IG9mIGxhemluZXNzL2xhY2sgb2YgdGVzdGluZyBzdXBwb3J0LiBUaGUg
Y29tbWVudCBhYm92ZSBBQ1BJX09TX05BTUUgc3VnZ2VzdHMgdGhhdCBpdCdzIG9ic29sZXRlIGFu
eXdheXMuDQoNClllcyB0aGVyZSBhcmUgYW5vdGhlciBob3Jyb3Igc3RvcmllcyBmb3IgdGhpcy4g
QmFzaWNhbGx5IEJJT1MgcHJvZ3JhbW1lcnMgd2VyZSB0ZXN0aW5nIG9uIHdoYXQgQUNQSUNBL09T
IHRoZXkgcnVuIHdpdGggYW5kIGRvIGRpZmZlcmVudCB0aGluZ3MuRGVwZW5kaW5nDQp3aGF0IE9T
IHdhcyB0b2xkLg0KDQo+IFVuZm9ydHVuYXRlbHksIEkgZG9uJ3Qgc2VlIGFueSBvcHRpb24gaW4g
dGhlIEJJT1MgcmVsYXRpbmcgdG8gY2xvY2sgZ2F0aW5nIG9yIEMxMSBwb3dlciBzdGF0ZXMuDQoN
ClRoYXRzIGJhZC4gVHJ5IHNvbWUgbW9yZSBnZW5lcmFsIHBvd2VyIHNhdmluZyBvcHRpb25zLiBE
b2VzIHRoZSBiZWhhdmlvciBjaGFuZ2UgaWYgbGFwdG9wIGlzIHBsdWdnZWQgdG8gQUM/DQoNCj4g
U2hvdWxkIEkgcHVyc3VlIGFsbG93aW5nIHRoZSB3cml0ZSBidXQgdGhlbiBkaXNhYmxlIHRoZSBj
bG9jayBnYXRpbmcgc2VwYXJhdGVseT8gSSdtIG5vdCBzdXJlIGhvdyB0byBkbyB0aGF0IHlldC4N
Cg0KWWVzIHlvdSBjYW4gdHJ5IGl0IG91dC4gQnV0IGl0IGlzIHRyaWNreS4NCg0KPiANCj4gSSBz
dGFydGVkIHRvIGxlYXJuIGFib3V0IGNsb2NrIGdhdGluZy4gSSB3YW50ZWQgdG8gc2VlIGlmIEkg
Y291bGQgY29uZmlybSB0aGF0IGNsb2NrIGdhdGluZyBoYXBwZW5zIHdoZW4gMHhhMCBpcyB3cml0
dGVuIHRvIDB4YjIuIEkgc3R1bWJsZWQgb24gdGhlIGZvbGxvd2luZyBpbmZvcm1hdGlvbiBmcm9t
IEludGVsOg0KPiBEYXRhc2hlZXQ6IGh0dHBzOi8vd3d3LmludGVsLmNvbS9jb250ZW50L2RhbS93
d3cvcHVibGljL3VzL2VuL2RvY3VtZW50cy90ZWNobmljYWwtc3BlY2lmaWNhdGlvbnMvMzAwLXNl
cmllcy1jaGlwc2V0LW9uLXBhY2thZ2UtcGNoLWRhdGFzaGVldC12b2wtMi5wZGYgPGh0dHBzOi8v
d3d3LmludGVsLmNvbS9jb250ZW50L2RhbS93d3cvcHVibGljL3VzL2VuL2RvY3VtZW50cy90ZWNo
bmljYWwtc3BlY2lmaWNhdGlvbnMvMzAwLXNlcmllcy1jaGlwc2V0LW9uLXBhY2thZ2UtcGNoLWRh
dGFzaGVldC12b2wtMi5wZGY+DQo+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0NCj4gMzAuMi4yMCBJVFNTIFBvd2VyIFJlZHVjdGlvbiBDb250cm9sIChJ
VFNTUFJDKeKAlE9mZnNldCAzMzAwaA0KPiBQb3dlciBjb250cm9scyBmb3IgdGhlIGVudGlyZSBp
bnRlcnJ1cHQgYW5kIHRpbWVyIHN1YnN5c3RlbS4NCj4gQml0IDI6DQo+ICI4MjU0IFN0YXRpYyBD
bG9jayBHYXRpbmcgRW5hYmxlIChDR0U4MjU0KTogV2hlbiBzZXQsIHRoZSA4MjU0IHRpbWVyIGlz
DQo+IGRpc2FibGVkIHN0YXRpY2FsbHkuIFRoaXMgYml0IHNoYWxsIGJlIHNldCBieSBCSU9TIGlm
IHRoZSA4MjU0IGZlYXR1cmUgaXMgbm90IG5lZWRlZCBpbg0KPiB0aGUgc3lzdGVtIG9yIGJlZm9y
ZSBCSU9TIGhhbmRzIG9mZiB0aGUgc3lzdGVtIHRoYXQgc3VwcG9ydHMgQzExLiBOb3JtYWwgb3Bl
cmF0aW9uDQo+IG9mIDgyNTQgcmVxdWlyZXMgdGhpcyBiaXQgdG8gMC4iDQo+IC0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCg0KWWVzIHRoaXMgaXMgaXQu
IFVuZm9ydHVuYXRlbHkgdGhlIHJlZ2lzdGVyIHBsYWNlbWVudCBpcyBub3Qgc3RhYmxlL3NhbWUg
YWNyb3NzIHN5c3RlbXMuIEludGVsIHRlbmRzIHRvIHB1dCBpdCB0byB2YXJpb3VzIHBsYWNlcy4g
U28gbGlrZSBBcG9sbG8gbGFrZSBoYXMgaXQgZWxzZXdoZXJlIGV0Yy4gWW91IG5lZWQgdG8gbG9v
ayB0byBhIGRvY3VtZW50YXRpb24gd2hpY2ggbWF0Y2hlcyAxMDAlIHlvdXIgc3lzdGVtLiBZb3Ug
Y2FuIHRyeSB0byBjaGVjayB0aGlzIGJ5IGNvbXBhcmluZyB0aGUgUENJIGlkcyBvZiB2YXJpb3Vz
IGRldmljZXMgYW5kIGNoZWNraW5nDQp0aGVtIGFnYWluc3QgZGF0YXNoZWV0cy4gWW91IGNhbiB0
cnkgdG8gbG9vayB0byBjb3JlYm9vdCBzb3VyY2VzIG9yIHNvbWUgb3RoZXIgb3BlbnNvdXJjZSB1
ZWZpIGltcGxlbWVudGF0aW9uIGlmIHRoZXkgaGF2ZSBzdXBwb3J0IGZvciB5b3VyIHN5c3RlbXMg
dG8gc2VlIGhvdyB0aGUgcDJzYiBpcyBkb25lLg0KDQo+IFVuZm9ydHVuYXRlbHksIEkgaGF2ZW4n
dCBiZWVuIGFibGUgdG8gZ2V0IGFjY2VzcyB0byB0aGF0IGJpdCB5ZXQuIFRoZSBQMlNCIEJyaWRn
ZSBpcyBoaWRkZW4uIEkndmUgZm91bmQgYSB3YXkgdG8gZ2V0IHRoZSBTQlJFR19CQVIgZnJvbSB0
aGUgUDJTQiBCcmlkZ2UgaW4gdGhlIFFOWCBCU1AuIA0KDQpZZXMuIEJ1dCBtYXliZSBpdCBpcyBm
b3IgYW5vdGhlciBjaGlwc2V0LiBTZWUgYWJvdmUuDQoNCj5Ib3dldmVyLCB1c2luZyBpdCB0byBy
ZWFkIHRoZSBJVFNTUFJDIHN0aWxsIHJldHVybnMgMHhGRkZGRkZGRi4gSSB3YXMgaG9waW5nIHRo
YXQgSSBjb3VsZCBjbGVhciB0aGF0IGJpdCBpZiBpdCBpcyBnZXR0aW5nIHNldCB0byB0ZXN0IGlm
IHRoYXQgbWFrZXMgdGhlIFBDIHNwZWFrZXIgd29yayA+YWdhaW4uDQoNCkhtIDB4ZmZmZmZmZmYg
c291bmRzIHdheSBzdXNwaWNpb3VzLiBJIGRvbid0IGtub3cgd2hhdCBvdGhlciBiaXRzIGRvIGJ1
dCBpdCBsb29rcyBsaWtlIHlvdSBhcmUgbG9va2luZyB0byB3cm9uZyBwbGFjZS4gUG9zc2libGUg
ZXJyb3JzOg0KDQoxKSB5b3UgZGlkIG5vdCBtYXAgY29ycmVjdCBtZW1vcnkgcmVnaW9uDQoyKSB5
b3UgZGlkIG5vdCBtYXAgaXQgdW5jYWNoZWQNCjMpIHlvdSBkaWQgbm90IGVuYWJsZSBkZWNvZGlu
ZyBvZiB0aGUgcmVnaW9uIChtYXliZSB0aGUgUDJTQiBoYXMgYWxzbyBjb21tYW5kIHJlZ2lzdGVy
IHdoZXJlIHlvdSBtaWdodCBuZWVkIHRvIGVuYWJsZSBCQVIgZGVjb2RpbmcpDQo0KSB5b3UgZGlk
IG5vdCB1c2UgcHJvcGVyIGNvbXBpbGVyIHRoaW5ncyBsaWtlICJ2b2xhdGlsZSIgb3IgY29tcGls
ZXIgYmFycmllcnMgYW5kL29yIHlvdXIgYWNjZXNzIGhhcyBiZWVuIG9wdGltaXplZCBvdXQgYnkg
dGhlIGNvbXBpbGVyDQo1KSB5b3UgZGlkIG5vdCByZWFkIHRoZSByZWdpc3RlciB1c2luZyBjb3Jy
ZWN0IHJlZ2lzdGVyIGxlbmd0aA0KPiBQYXJ0IG9mIHRoaXMgaXMgYSBsZWFybmluZyBleGVyY2lz
ZSBmb3IgbWUsIGJ1dCBwYXJ0IG9mIGl0IGlzIGFsc28gdG8gZ2V0IGEgcHJvcGVyIGZpeCBmb3Ig
dGhpcyBzeXN0ZW0uIElmIHRoaXMgaXMganVzdCBhbiAiQVBNIHRoaW5nIiB0aGF0IHNob3VsZG4n
dCBiZSBlbmFibGVkIHRvIGJlZ2luIHdpdGggb24gbXkgc3lzdGVtLCB0aGVuIEkgZ3Vlc3MgSSBu
ZWVkIHRvIGZpZ3VyZSBvdXQgaG93IHRvIHRlbGwgQklPUyB0aGF0IHRoaXMgT1MgaXMgIm5vdCBB
UE0gYXdhcmUiLiANCg0KVGhlIEFDUElDQSBkb2VzIGNvcnJlY3QgdGhpbmcuIFNlZSBhYm92ZS4N
Cg0KPkVpdGhlciB0aGF0LCBvciBqdXN0IGJsb2NrIDB4YTAgd3JpdGVzIHRvIDB4YjIgKGJ1dCB0
aGF0IGZlZWxzIGxpa2UgdGhlIHdyb25nIGFwcHJvYWNoKS4NCg0KWWVzIHRoaXMgaXMgd3Jvbmcg
YXBwcm9hY2gsIGJlY2F1c2UgQklPUyB3aWxsIG9mdGVuIGdlbmVyYXRlIFNNSXMgYW5kIFNDSXMg
Zm9yIG1hbnkgZXZlbnRzLiBJJ20gYWZyYWlkIHlvdSBuZWVkIHRvIGRvIHRoZSB3cml0ZSB0byAw
eGIyLg0KDQpHaXZpbmcgaXQgbW9yZSB0aG91Z2h0cyB0aGUgY2xvY2sgZ2F0aW5nIG1pZ2h0IG5v
dCBiZSB0aGUgb25seSBvciBjb3JyZWN0IHByb2JsZW0gdG8gc29sdmUuIElmIGl0IGlzIGEgbGFw
dG9wLCBJIHN1c3BlY3QgdGhhdCB0aGUgbGVnYWN5IHNwZWFrZXINCmdvZXMgdG8gc291bmQgY29k
ZWMgc29tZWhvdyBhbmQgdGhlbiB0byBsYXB0b3Agc3BlYWtlcnMsIGFuZCBtYXliZSBCSU9TIHN3
aXRjaGVzIG9mZiB0aGUgc291bmQgY29kZWMgKGxpa2UgcHV0cyBpdCB0byBEMyBzbGVlcCkuDQpJ
IGRvbid0IGtub3cgaG93IHRoZSBzb3VuZCBjb2RlYyByb3V0aW5nIGlzIHVzdWFsbHkgZG9uZS4g
WW91IG5lZWQgdG8gY2hlY2sgaXQgeW91cnNlbGYuDQoNCkRvIHlvdSBoYXZlIHNjaGVtYXRpY3Mg
b2YgdGhhdCBzeXN0ZW0gdG8gY2hlY2sgd2hhdCB0aGUgYmVlcGluZyBvdXRwdXQgZnJvbSB0aGUg
Y2hpcHNldCByZWFsbHkgZG9lcz8NCg0KVGhhbmtzLA0KUnVkb2xmDQoNCg0KDQoNCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkRldmVsIG1haWxpbmcgbGlz
dCAtLSBkZXZlbEBhY3BpY2Eub3JnClRvIHVuc3Vic2NyaWJlIHNlbmQgYW4gZW1haWwgdG8gZGV2
ZWwtbGVhdmVAYWNwaWNhLm9yZwolKHdlYl9wYWdlX3VybClzbGlzdGluZm8lKGNnaWV4dClzLyUo
X2ludGVybmFsX25hbWUpcw==
